// 变量和 mixins 现在通过 Vite 自动从 variables.scss 导入

// 全局样式重置
* {
	box-sizing: border-box;
}

html {
	// 防止iOS横屏字体大小调整
	-webkit-text-size-adjust: 100%;
	// 防止点击高亮
	-webkit-tap-highlight-color: transparent;
	// 设置默认字体大小，防止页面加载时闪烁
	font-size: 16px; // 会被 rem-adapter 动态覆盖
}

body {
	font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
	line-height: 1.6;
	color: $secondary-color;
	margin: 0;
	padding: 0;
	font-size: 14px; // 基础字体大小，会被PostCSS转换为rem

	// 禁用长按选择
	-webkit-user-select: none;
	user-select: none;

	// 禁用长按菜单
	-webkit-touch-callout: none;
}

// 允许文本选择的元素
input,
textarea,
[contenteditable] {
	-webkit-user-select: auto;
	user-select: auto;
}

// 工具类
.btn {
	@include button-style();
}

.btn-secondary {
	@include button-style($secondary-color);
}

.btn-success {
	@include button-style($success-color);
}

.card {
	@include card-style();
}

.text-center {
	text-align: center;
}

.mt-1 {
	margin-top: 0.5rem;
}
.mt-2 {
	margin-top: 1rem;
}
.mt-3 {
	margin-top: 1.5rem;
}
.mt-4 {
	margin-top: 2rem;
}

.mb-1 {
	margin-bottom: 0.5rem;
}
.mb-2 {
	margin-bottom: 1rem;
}
.mb-3 {
	margin-bottom: 1.5rem;
}
.mb-4 {
	margin-bottom: 2rem;
}

// 响应式容器
.container {
	max-width: 1200px;
	margin: 0 auto;
	padding: 0 16px; // 16px会被转换为1rem

	@include respond-to('tablet') {
		padding: 0 32px; // 32px会被转换为2rem
	}

	@include respond-to('desktop') {
		padding: 0 48px; // 48px会被转换为3rem
	}
}

// rem适配相关工具类
.no-rem {
	// 标记为不转换rem的元素，PostCSS会跳过这个类下的px转换
}

// 响应式字体大小
.font-xs {
	font-size: 12px;
}
.font-sm {
	font-size: 14px;
}
.font-base {
	font-size: 16px;
}
.font-lg {
	font-size: 18px;
}
.font-xl {
	font-size: 20px;
}
.font-2xl {
	font-size: 24px;
}
.font-3xl {
	font-size: 30px;
}

// 响应式间距
.p-xs {
	padding: 4px;
}
.p-sm {
	padding: 8px;
}
.p-base {
	padding: 12px;
}
.p-lg {
	padding: 16px;
}
.p-xl {
	padding: 24px;
}

.m-xs {
	margin: 4px;
}
.m-sm {
	margin: 8px;
}
.m-base {
	margin: 12px;
}
.m-lg {
	margin: 16px;
}
.m-xl {
	margin: 24px;
}

// Flexbox工具类
.flex {
	display: flex;
}
.flex-col {
	flex-direction: column;
}
.flex-wrap {
	flex-wrap: wrap;
}
.items-center {
	align-items: center;
}
.justify-center {
	justify-content: center;
}
.justify-between {
	justify-content: space-between;
}

// 响应式显示控制
.hidden {
	display: none;
}

@include respond-to('mobile') {
	.hidden-mobile {
		display: none;
	}
	.block-mobile {
		display: block;
	}
}

@include respond-to('tablet') {
	.hidden-tablet {
		display: none;
	}
	.block-tablet {
		display: block;
	}
}

@include respond-to('desktop') {
	.hidden-desktop {
		display: none;
	}
	.block-desktop {
		display: block;
	}
}
